apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "signer.fullname" . }}
  labels:
    {{- include "signer.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "signer.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "signer.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "signer.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-waitforpki
          env:
            - name: ACCEPT_LICENSE
              value: "{{required "You must accept the license agreement to use this software." .Values.acceptLicense }}"
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.signerImage.repository }}:{{ .Values.signerImage.tag }}"
          imagePullPolicy: {{ .Values.signerImage.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |-
              echo "Waiting for ./DATA/PKITOOL-DONE ..."
              until [ -f ./DATA/PKITOOL-DONE ]
              do
                sleep 5
              done
              ls -al ./DATA/PKITOOL-DONE
              echo "Waiting for ./DATA/PKITOOL-DONE ... done."
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: pki-certs-keys
              mountPath: /opt/cenm/DATA
        - name: init-token
          env:
            - name: ACCEPT_LICENSE
              value: "{{required "You must accept the license agreement to use this software." .Values.acceptLicense }}"
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ required "signer[cli]: missing value for .Values.dockerImageCli.repository" .Values.dockerImageCli.repository }}:{{ required "signer[cli]: missing value for .Values.dockerImageCli.tag" .Values.dockerImageCli.tag }}"
          imagePullPolicy: {{ .Values.dockerImageCli.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
          - |-
            [ ! -f etc/signer-aws.conf ]       && cp CM/signer-aws.conf       etc/
            cp CM/*.sh bin/
            chmod +x bin/*
            bin/getZoneToken.sh
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: signer-etc
              mountPath: /opt/cenm/etc
            - name: signer-conf
              mountPath: /opt/cenm/CM/getZoneToken.sh
              subPath: getZoneToken.sh
            - name: signer-conf
              mountPath: /opt/cenm/CM/signer-aws.conf
              subPath: signer-aws.conf
      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.signerCustomImage.repository }}:{{ .Values.signerCustomImage.tag }}"
          imagePullPolicy: {{ .Values.signerCustomImage.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
          - |-
            set -x
            wget --tries=5 https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-latest.el7.x86_64.rpm
            yum install ./cloudhsm-client-latest.el7.x86_64.rpm -y

            wget --tries=5 https://s3.amazonaws.com/cloudhsmv2-software/CloudHsmClient/EL7/cloudhsm-client-jce-latest.el7.x86_64.rpm
            yum install ./cloudhsm-client-jce-latest.el7.x86_64.rpm -y

            cd /opt/cenm
            mkdir bin
            cp -p CM/*.sh bin/
            cp CM-FILES/customerCA.crt /opt/cloudhsm/etc/customerCA.crt
            cp /opt/cenm/CM/signer-aws.conf etc/signer-aws.conf
            cp ../../signer-tool-jars/* bin/

            /opt/cloudhsm/bin/configure -a "{{ .Values.pkiAWS.credentialsAmazon.eniIPAddress}}"
            /opt/cloudhsm/bin/cloudhsm_client /opt/cloudhsm/etc/cloudhsm_client.cfg >output.log 2>&1 &
            jobs

            chmod +x bin/run.sh
            bin/run.sh
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            tcpSocket:
              port: {{ .Values.adminListener.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end  }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            tcpSocket:
              port: {{ .Values.adminListener.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end  }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: pki-certs-keys
            mountPath: /opt/cenm/DATA
          - name: hsm-libs
            mountPath: /opt/cenm/HSM
          - name: signer-etc
            mountPath: /opt/cenm/etc
          - name: signer-logs
            mountPath: /opt/cenm/logs
          - name: signer-conf
            mountPath: /opt/cenm/CM/run.sh
            subPath: run.sh
          - name: signer-conf
            mountPath: /opt/cenm/CM/signer-aws.conf
            subPath: signer-aws.conf
          - name: signer-conf
            mountPath: /opt/cenm/CM-FILES/customerCA.crt
            subPath: customerCA.crt
          {{- if .Values.logsContainersEnabled }}
        - name: logs-signer
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.signerImage.repository }}:{{ .Values.signerImage.tag }}"
          imagePullPolicy: {{ .Values.signerImage.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
          - |-
            cd /opt/cenm/
            while true; do tail -f logs/signing-service/*.log 2>/dev/null ; sleep 5; done
            # in case sth went wrong just wait indefinitely ...
            tail -f /dev/null
          volumeMounts:
          - name: signer-logs
            mountPath: /opt/cenm/logs
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- end  }}
      volumes:
        - name: pki-certs-keys
          persistentVolumeClaim:
            claimName: {{ .Values.prefix }}-pki-certs-keys
        - name: hsm-libs
          persistentVolumeClaim:
            claimName: {{ .Values.prefix }}-hsm-libs
        - name: signer-etc
          persistentVolumeClaim:
            claimName: {{ .Values.prefix }}-signer-etc
        - name: signer-logs
          persistentVolumeClaim:
            claimName: {{ .Values.prefix }}-signer-logs
        - name: signer-conf
          configMap:
            name: {{ .Values.prefix }}-signer-conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
